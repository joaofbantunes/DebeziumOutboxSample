# Kafka stuff from https://github.com/confluentinc/examples/blob/7.0.0-post/cp-all-in-one-community/docker-compose.yml
version: "3"

services:
    zookeeper:
        image: confluentinc/cp-zookeeper:7.0.0
        hostname: zookeeper
        container_name: zookeeper
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
    
    broker:
        image: confluentinc/cp-kafka:7.0.0
        hostname: broker
        container_name: broker
        depends_on:
            - zookeeper
        ports:
            - "29092:29092"
            - "9092:9092"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    
    control-center:
        image: confluentinc/cp-enterprise-control-center:7.0.0
        hostname: control-center
        container_name: control-center
        depends_on:
            - zookeeper
            - broker
            #- schema-registry
        ports:
            - "9021:9021"
        environment:
            CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:9092'
            CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:32181'
            #CONTROL_CENTER_KSQL_URL: "http://ksql-server:8088"
            #CONTROL_CENTER_KSQL_ADVERTISED_URL: "http://localhost:8088"
            #CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
            CONTROL_CENTER_REPLICATION_FACTOR: 1
            CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
            CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
            CONFLUENT_METRICS_TOPIC_REPLICATION: 1
            PORT: 9021

    postgres:
        image: postgres
        container_name: postgres
        ports:
            - "5432:5432"
        environment:
            POSTGRES_USER: "user"
            POSTGRES_PASSWORD: "pass"
        command: [ "postgres", "-c", "wal_level=logical" ]
    connect:
        image: "debezium/connect:2.1"
        container_name: connect
        ports:
            - 8083:8083
        depends_on:
            - postgres
            - broker
        environment:
            BOOTSTRAP_SERVERS: broker:9092
            GROUP_ID: 1
            CONFIG_STORAGE_TOPIC: CONNECT_CONFIGS
            OFFSET_STORAGE_TOPIC: CONNECT_OFFSETS
            STATUS_STORAGE_TOPIC: CONNECT_STATUSES
    seq:
        image: "datalust/seq:2021"
        hostname: seq
        container_name: seq
        ports:
        - "5341:5341" # ingestion API
        - "5555:80" # ui
        environment:
            ACCEPT_EULA: "Y"
    producer:
        build: 
            context: .
            dockerfile: ./src/producer/Dockerfile
        image: debeziumoutboxsample/producer:latest
        container_name: producer
        depends_on:
            - postgres
    consumer:
        build: 
            context: .
            dockerfile: ./src/Consumer/Dockerfile
        image: debeziumoutboxsample/consumer:latest
        container_name: consumer
        depends_on:
            - broker